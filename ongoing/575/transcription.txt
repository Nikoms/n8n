during q1 of 2020 I was promoted to principal engineer at Amazon I received hundreds of congratulations via email and slack when the announcement was made the lockdown had just started so I suspect many more people were glued to social media than usual but as I sat in my makeship home office receiving these messages I thought to myself that I should feel happier was this it what the people sending those messages didn't see was that I'd been put up for promotion and failed five times over the previous four years My Success did not feel as good as those five previous attempts felt bad not by a long shot the funny part is getting to senior SD was the exact opposite experience I started at Amazon as a support engineer in 2006 and made a lateral move to L4 sd1 in December of 2007 I got to sd2 in q1 of 2009 and made it to senior SD or sd3 in q1 of 2012 I was flying through the ranks and by 2016 4 years after my last promotion I thought I was ready to become an L7 principal engineer but it wasn't meant to be I'd gotten pretty far by winging it but once I got stuck I didn't know what to do to unstick myself in this video I'll give you three lessons I learned from this really frustrating experience I hope you can just skip past these difficult bits if you're new to the channel welcome my name is Steve meta Scuba Steve or as my wife likes to call me Steve and I'm an L7 principal engineer on this channel we take a structured and Engineering approach to your life and career before I get into my first lesson let's compare two hypothetical people Russell isn't afraid to work nights and weekends when called upon actually he's usually working nights because he finds work really engaging nobody's checked in more code or squashed more bugs than he has he jumps at the chance to help others on board and is super helpful with code review comments helping others get better themselves and russle is awesome to work with on the other end of the spectrum is Matt he rolls into the office whenever he wakes up which may or may not be in time for standup he never works nights or weekends and stops working at 5:00 p.m every day but sometimes that's closer to 3 Matt checks in an average amount of code and solves an average amount of bugs he helps people only when he has to and to be quite honest he's a bit of a jerk when people do ask for help between Russell and Matt who's going to get promoted first on the surface it seems like Russell is going above and beyond so it must be him but what if I told you that Matt knew intimately the details of the promotion process at their company while Russell didn't and he was just hoping that his performance was going to be noticed well then I'd switch and say that it's hard to know who was going to get promoted first despite the fact that Matt doesn't seem to be performing very well and Russell is killing it this is my first point which is that promotions aren't a meritocracy they're a process and just like any process they aren't perfect but they can also be broken down and optimized for many companies publish their promotion criteria and processes but even if your company doesn't if you'd like to get promoted the first step is to understand what that process is you can do this by asking your manager co-workers that got promoted in the past or your HR business partner you can't beat a game if you don't know what the wi conditions are during the four years when I was trying to get promoted my company changed the process for l 7 promotions three times when they changed I didn't get clarifications on what the impact of the changes would be to my particular promotion one of these changes shifted the responsibility for a promotion task from me to my manager because I didn't know about the change we weren't able to finish that step in time and that set me back another cycle which was 6 months all because I didn't understand these steps you own your career growth if it's an outcome that you want you need to push for it and understand what it takes for my next Point let me tell you a story from some when I mentored to the next level for this video let's call him Lance Lance was kicking butt he wrote a lot of high quality code he fixed a lot of bugs he made quick work of every task that was picked up Lance does what he's told his co-workers love him and his boss was really happy with his work but when it came time to get feedback from his co-workers for promotion his feedback providers weren't supportive and Lance was a bit confused when we spoke he was meeting all of the expectations for his level and his performance was Stellar why is it that high performance at level wasn't enough for the next level level the reason is because Tech promotions are anti- Peter Principle the Peter Principle is the idea that if you're competent at your current level you should get promoted Tech promotions are almost always anti- Peter Principle that is you have to demonstrate competence at the next level before the promotion is given to you the lesson here is that promotions are not a reward for good work but rather given to people that can demonstrate that they can handle a broader scope companies that publish their promotion criteria are essentially describing what that next level scope is this usually doesn't come in the form of checklists if it did then it would be a simple matter of checking all the boxes instead what you want to provide are multiple data points of Next Level Scope when I shared this mental model with Lance he finally got it performance at level even high performance there isn't enough to get promoted on his next project he took on more than what was expected and he got promoted just 3 months later and that brings me to the last lesson that I'll share with you today suppose you had a choice between two surgeons to do life-saving heart surgery on you the research literature states that people with your condition have a 75% chance of survival for the first surgeon all you have are glowing reviews from previous patients they all take the form of he's a great doctor I would trust him to do it again in a heartbeat pun intended and for the second surgeon for some reason there was a problem with getting reviews but you had the raw data the second surgeon has a 95% success rate a whopping 20% more than the average so which one would you choose of course you're going to choose the second it's not because the good reviews are a bad thing but because the reviews suffer from literal Survivor bi nobody that had a bad review was around to give it but more than that it's really difficult not to pick the second one in light of the concrete evidence that the second surgeon is really effective at the procedure it's the same thing when it comes to promotion if you're able to document Next Level data points with concrete evidence that you're operating at the next level that trumps any qualitative endorsement in other words the lesson is that you should gather tangible evidence that you're operating at the next level I've been witnessed to several promotions that were kicked back because the entire promotion packet was filled with statement ments like Steve is a great engineer whenever there's a problem I trust that Steve will do the right thing or Steve was instrumental to the project name launch without him the project would have been delivered late and with more defects the problem with this type of feedback is that it neglects to isolate the specific contribution of the person in question and to highlight why that contribution demonstrates Next Level scope instead a much more effective Passage would read Steve was responsible for Designing coding and delivering a critical component for project name it was a tricky thing to write because because a component had to provide a response to clients in under 10 milliseconds whereas a component that he was replacing generated a response in 100 milliseconds he was able to do this because he made the critical Insight that many of the responses could be pre-computed it's the same work but you can see how the second piece of feedback is much more compelling so how do you get people to write such good feedback for you it's simple generally you'll know who will be giving you feedback for promotion all you have to do is write the feedback that you'd like to see from them even if your project hasn't been delivered yet as you do your work make sure that you operate in a way that will lead to the feedback that you want and when promotion time comes you can send them a little message that reminds them of what they witnessed I do a similar thing with my YouTube videos as part of my process I write down the type of comments that I want to elicit then when I make my videos I try to do them in a way that will generate the comments that I want for the video for this video the comments I wanted were I'm so glad that I found your channel I just binged all of your content and the content in your videos is gold thanks for making them if you start from the feedback that you want from people and work backwards from that it makes the process itself less ambiguous because it gives you a Target if you found these tips to be useful make sure to register for the speedrun to promotion launch event I'll go into much more detail about the structured approach to promotion that I developed the promotion algorithm the link is in the description if you found this video to be useful check out my video on three things holding back your promotion to senior engineer if you're already a senior engineer check out this video for three things holding back your promotion to staff or principal engineer