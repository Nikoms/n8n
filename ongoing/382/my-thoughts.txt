In the video, ownership of the communication channel and contract differs between events and messages: events are owned by the sender who defines the event and its structure, while messages are owned by the receiver who controls the queue and message contract. This distinction is crucial for understanding how components interact within event-driven architectures and clarifies why events typically use publish/subscribe patterns and messages use point-to-point queues. Recognizing this difference helps in deciding when to use events to broadcast state changes and when to use messages to send commands or queries.