hello everyone and welcome to software architecture Monday my name is Mark Richards and in this next lesson 188 we'll take a look at how to identify architectural characteristics that are critical or important to your particular system you can get a listing of all the lessons I do in software architecture Monday in my website at developer to architect.com lessons in the last lesson we took a look at architectural characteristics and saw various categories that we can place these in to just help us gain a little bit better understanding of which ones I might need but in this lesson I want to take that one step further and ask that question even with categories how do I know which one of these I need and as a matter of fact this is a very common question by most software Architects Well turns out that most architectural characteristics come from three different sources and I want to show you those three sources uh the first source of knowing which characteristics are important to us can also really come from the the business domain itself uh our problem domain uh for example we're building a new stock trading system well I don't need G given enough understanding of course of our domain I don't need any other requirements to know that certainly low latency or performance is going to be key and also very high data integrity and so these are two things the architecture is going to need to support well it turns out a lot of them do end up showing up in requirements but not as architectural characteristics but as requirements for example we must support anywhere between 20 and 200,000 current customers which really describes the architectural characteristic of elasticity uh those Peaks and valleys of users whether expected or unexpected and being able to react quick enough to those additional load and and that's elasticity but it turns out at least in my experience that most architectural characteristics come from simp simply listening to the business for example we're aggressively expanding our business and as an architect that tells me that our systems regardless of what that system is will need to support scalability so these are some of the areas in which we can extract architectural characteristics but because that last one is so important at least in my experiences I want to show you some other aspects of that and also then how to get business stakeholders and our product teams to agree on these well let me start by saying this is the language of the business business stakeholders uh we're aggressively expanding our business uh user satisfaction is the most important thing for us we have to have time to Market mergers Acquisitions um this is the language of the business of our product owners product stakeholders but this is the language of Architects architectural characteristics um ilities of architecture uh system quality attributes nonfunctional requirements whatever you choose to name them this is our language but a problem exists everyone in this Lost in Translation problem because as the software AR is talking about one thing the business stakeholder is talking about something completely different and this is where we don't intersect with our product teams one of the skills of a software architect and trying to identify the important and critical architectural characteristics is to be able to use our brain as a translation engine so that as the business is saying one thing we're understanding what they mean and we can translate that back to them as a matter of fact this is such an important skill when identifying characteristics I want to focus on this as a matter of fact let's use a couple of examples let's say that user satisfaction is Paramount critical in our business so we take that user satisfaction now I know what you're thinking and no the answer is not user satisfaction ability I know as Architects we do have a habit of taking any word and adding the word ility to the end of it but let's really use our translation engine to see what the architecture would really need to support because if we take user satisfaction move that into our architectural brain we translate that into characteristics language that the architecture must support things like performance agility that ability to respond quickly to change certainly security we don't we don't want the our customers credit cards to get stolen or breached they would not be very happy availability of the systems and corresponding fault tolerance faults do happen recoverability testability which reduces errors and bugs these are all things that support user satisfaction but there's a very critical thing I'm showing here that a lot of times when the business says something that they need it usually translates into many architectural characteristics because for example Performance alone would not give us user satisfaction it's just one of the many ingredients for user satisfaction let me show you another very common one that we Face from our product teams and that is time to Market uh some people call this speed to Market how fast can we get our new features bug fixes and changes out to our user Community because it's a highly competitive market and we have to get our changes out faster than our competition or we just will not survive well time to Market we think about that as an architect use our translation engine which is one of our superpowers and it turns out that three key things emerge three key architecture characteristics maintainability testability and deployability all three of these need to be maximized architecturally in order to satisfy time to market now in the last episode uh episode in the last lesson 187 I talked about categories of architectural characteristics and these are all about the process of making a change well this is the first step in identifying architectural characteristics but everyone there's a followon step that's required now I introduced this architecture characteristics worksheet way back in lesson 112 and this is available for anybody to download um on my website under the resources uh menu item and you can download this in Powerpoint keynote or or PDF format but this next step involves documenting recording the ones that we as an architect think are critical but now comes part two because we take this document as a vehicle for collaboration between us as Architects and also the product team so that I canect itively explain and describe to that product team why I came up with these where I came up with them and what I translated now no one's perfect including myself and sometimes we misinterpret what's really important to the business and that feedback comes back to us utilizing this artifact this worksheet as a vehicle for being able to relay our language to the product owner and have the product owner relay their language to us and thereby not only getting Buy in of what architectural characteristics are important but also validating those as well so this has been lesson 188 uh continuing uh with these architectural characteristics themes on identifying which characteristics are critical and I hope that this helps you in kind of identif in your own uh some good homework uh for all of you after watching this video so thank you so much for listening stay tuned in two more Mondays uh for the next lesson in software architecture Monday