we will say no to people even if their coding and system design is good this guy was a principal engineer at Amazon he conducted thousands of interviews while he was there and last month I went to his Studio to ask him to teach me everything he knows about interviewing in big Tech he also shared a ton of unexpected stories H from his promotion to principal engineer at Amazon how many people are expected to be cut in Amazon typically what I can say is the PIP or performance Improvement plan and then what about the worst manager you had yeah I don't want to name names or anything but I know that you came from a liberal arts background um your major going into college was actually English right yeah I was creative writing and and English literature so can you tell us a little bit about you getting into Amazon without a CS major yeah I think um just getting in as a liberal arts major may be a bit disingenuous uh both of my parents were electrical engineers and so I've always had a computer around the house and um you know I used to program that computer I still remember my first one it was an uh IBM XT 8088 with uh 640k of ram no hard disk two five and two five and a qu uh two 5 and a qu inch floppy discs so that it's a floppy disc that's actually floppy not the hard one that you you probably don't even remember um and so you know I've I've always been been coding and uh since a really young age in high school I did the computer science uh AP tests my sophomore year I did the ab test which was in Pascal way back when Pascal is a programming language and um my junior year uh it was in C++ and I did the BC test and so I knew about the concepts of you know Big O um algorithms and data structures how to write programs you know I still remember making like a Tetris clone when I was in high school so you know the fact that I broke in without a computer science degree if you just said the part about the English degree um like I said it's a it's a bit disingenuous and so I I went to school I got a liberal arts degree I did get a minor um in math and applied math and I took some computer science courses you know when I when I got out of school I I was looking for work and it was around 2005 2006 I still remember this story I went and talked to my my writing Professor uh in one of my senior year seminars at udub and I was like Professor bossworth like what type of job should I get um I want to be a writer and he said he put his hand on my shoulder and he was like Steve there's no job called writer it's it's like not not yet there is a job called waiter and so you just have to find a way to sort of support yourself um while you ply your craft right and so just finding some sort of way to eek by while you get some experience under your belt I wasn't really turned on by that and so I decided to to revisit the skills that I picked up in high school and before that I see so I mean to me then it is disingenuous to say that as if you came from zero skill but your resume came from zero is my understanding right because if if you look if I was a big tech recruiter and I was looking through stack of resum√©s and English major comes along you probably would not stand out when it comes to you know the the job market so what is the thing that you did that got you into Amazon it was through networking so somebody that I did AP Computer Science with work at Amazon he went to University of Washington and got a proper computer science degree and was a software developer at Amazon and so they needed some support Engineers uh and it was a contract position and so I basically was like can you get me an interview at the company and I was just I was not worried about a coding interview because of my prior experience but also you know I think with support engineers they writing scripts and and maintaining systems and so I got through on that interview and um you know I was a green badge contractor for about nine months before I transitioned a fulltime what's green badge mean just temp yeah it's a temp I see it's an Amazon term yeah so the blue badge would be full-time and then green badge is a contractor yellow is like a vendor or got it got it got it like maybe today's environment is like a bit more intense where people want to get into big TCH and you know Amazon's a big name at this point but also your resume although it was not CS the thing that got you in was that you knew someone and they gave you like a a referral and that made a big difference that at least got you the the interview and then you had the skills cuz you were you had been doing CS for a while yeah I think the way to think about it if you know when I when I guide people trying to get a job it takes two things it takes you know some amount of opportunity and it takes some amount of study and so you don't know when the opportunity is going to pop up you don't know if your Uncle Daniel from church you know will talk to somebody that knows about a job opening you don't know when that's going to land it's very unevenly distributed where these opportunities come from but I think over time they will come and and rear their their heads or make themselves available I think the other side of it is the preparedness right so upleveling yourself gaining knowledge gaining skills that needs to to occur you can't just have the opportunity and then not have the skills right and so those two need things need to marry and so you know I think back then it was much more difficult to gain the knowledge that was necessary to to get into big Tech today you know you see all of these cottage industries around interview prep getting ready for the coding interview none of that stuff existed when I was trying to get in and so I think it would actually be harder um back then to get your foot into the door in Tech from a non-traditional background than it is today now I won't say that it's necessarily easy today but at least in my mind I think it was more difficult for me yeah I remember when we worked on that post together you said there wasn't even the idea of like uh lists of leak code questions and things and you were just collecting interview questions to prepare yeah so when I was uh a support engineer and I um you know they made me blue badge so full-time employee but I just I wanted to be an SD so bad and so all I did for the audience's software development engineer yeah and so I wanted to be a software developer so bad I just cornered everybody I just became a collector of questions I was like what do you ask during interviews and I was like don't tell me the answer I'm going to go and figure it out and so you know just did it the oldfashioned way um just firing up an IDE and you know you don't have all these battery of test cases they get run like you know with Le code and stuff now and so you know generating your own test case you know that's that's a way to sort of uplevel yourself so I feel like I did it in a just in a time where you know we weren't so resourcer so I imagine that probably lowered the average performance of a of an interviewee uh and maybe because you had some extraordinary uh process of like collecting questions that you might have been like you know very outstanding when it comes to everyone because ultimately interview prep is a little bit competitive you need to be better than the other people to to get in yes and no I I think of the distribution of demand for software developers is skewed I just especially today I don't think there's a ton of demand for junior folks I think there's a extraordinary amount of demand for senior and above the reality is that seniors come from mid-level and juniors and so I think the pipeline is a bit busted right now I don't necessarily think of a ton of competition at the upper end um I do think that there is a lot at the lower end um but the competition doesn't exist at the interview stage I think the competition exists at the pre-qualification and selection phase and so if you're able to catch the attention of a recruiter say you know somebody that works at the company or you're able to go really deep in a particular area and and stand out maybe you built an app has some amount of customers that's where the competition is like you need to stand out on the selection side by the time you get to the interview it like it's just a matter of clearing the bar there and so you're the the dimension of competition is not at the coding level I don't think why do you think that most interview prep advice is garbage I think that most interview prep is non-optimal and so you know there's a there's a hyperfocus on the coding interview there's a hyperfocus now on system design but I think really people forget they so they they turn it into a test and in some sense it is if you can't code then they they don't want you um if you can't design a system and you're a senior like you know it's not going to work out like if we put you in a in a role it's it's just you're going to be that 5% that leave right we don't want to do that and so the the big overarching framework is the people on the other side of the table are trying to figure out whether they want to work with you whether you're going to be a good fit for the culture but people think about it in terms of a test and so it's much more like a date than it is like at the sat right and but the but the the prep industry the interview prep industry it's much easier to think about it and present it as a test right and so I wish people would just embed this uh you know some things like hey behavioral interviews have an outsized impact on whether they're going to hire you and what level you're going to come in at so instead of say spending 80% of your time on coding or maybe let's say 60% on coding and then 35% on system design and like the 5% is like the donate to charity pie slice like maybe it's much more like 40% 40% 20% right because that behavioral side I think is really where the match is made where and where behavioral is the 20% I was a bar Razer trainer and I trained thousands of people at Amazon on how to conduct interviews assess talent and then level people before the training was you know now it's a set of videos but it used to be live training so I've trained many people on this and what I used to say and I'll say it right now is the coding so the functional parts of the interview the coding interview the system design interview those things are the anti right so they're the small blind and big blind so I use a poker analogy they're the small blind and big blind of of getting into a company and the the behavioral part of the interview that's the poker part of Poker right that's like do you have a good hand you know trying to beat the other hand of the other person and so if you thought about the coding part and the system design part as necessary but not sufficient like that's the that's the thing that I wish people understood right we will say no to people that have poor behavioral answers poor not in the sense that they don't have the experience it needs it's just we can recognize from far away that it's not going to be a good fit for the company we'll say no to those people even if their coding and system design is good you're saying at Amazon it's like the functional part it's like coding system that's like pass no pass yes but once you pass it your leveling and the I guess the color behind how how good you are is the behavioral yes I see okay okay so then what what should people do to kind of um you prevent from being down leveled because their behavioral is bad I think that they should spend some time on what I call packaging so if you can package your experience and sort of communicate that packaging to your interviewer I think that's just optimal for both sides right so you are packaging your experience you're you're communicating to them what you're all about how you operate what things you've done in the past and you can make that a good story you can not it doesn't have to be entertaining but it can be efficient and you can you know if if you are able to effectively articulate yourself and communicate it to your interviewer I think now we're talking about empathy now we're talking about things like this is the fundamental question for interviews is like do I want to work with this person that's the question that this whole song and dance for the for the interview process is trying to figure out do I want to work with this person or not and and I think spending some time on the behavioral side is about trying to help the interviewer answer that question so you are just you're really trying to act like yourself and and not you know it's not NE you want to put your best foot forward you don't want to lie obviously you want to misrepresent yourself but I I really think that um you know just being able to talk about who you are what you're about and your experience like that's the important part that's the missing part from all of this Cottage like interview prep that's going on on the internet that's the big thing that's missing could you give me an example of packaging like what maybe you could package your as if you were going to sell yourself back and go back to Tech yeah you know so um just even something like tell me about yourself right um I think people people kind of gloss over that and they kind of run on sentence their way through it and you know I think if I were to answer a question like that it would just be like hey you know my name is Steve fnn I have you know I have a a passion for backend distributed systems um I really love to work on um you know customer facing products I'm a sports fan you know I used to work at Amazon tickets and and Prime video sports and um you know I I really love like building teams and and really you know taking an organization's engineering culture and upleveling it at that level like those are those are some of my passions right I didn't prep for that that was kind of a interview off the cuff but you know hopefully you got a sense of you know who I am and what I'm about and the level that I operate one thing that I like to say is that the stories you tell they they sort of betray your level the way that you you you communicate with people they betray your level right and so if you have stories that are sd1 stories right entry level stories but you're trying to get a senior role that that in congruity is the thing that's going to lead to the down leveling yeah that makes sense and like the last thing that you said there was upleveling teams you're almost speaking to like a like a staff or higher rubric where you know it's not like you said oh I like to clean up the code or yeah I love refactoring code it's like I do yeah but that's not that's not how I'm going to describe myself yeah right and so I um trying to turn this into a video of some sort but I just I want to do a thing where I just talk with somebody for five minutes and I try to figure out whether they're senior or mid or staff or whatever they are oh that'd be interesting like a blind yeah yeah like you don't know and you just yeah and maybe I'm you know maybe I'm overconfident but I just I feel like if I talk to a junior entry-level person I would know that they're a junior entry level person they just they just just the way that they carry themselves the the things that they talk about you know um now maybe on the you know if they're a strong senior engineer you know are they going to be able the pass as a principal yeah there's some there's some places where I um you know I might struggle but I I think I'm really calibrated in terms of level so that's for the interview stage what about before you get the interview right now it's a really competitive job market do you have any advice for people to stand out you have to be an outlier in some regard and so being an outlier May mean oh I have a contact that can give me a referral to a big tech company I think that if you just if you C DMD some folks on a team that had an opening and it was you know you didn't like spam them it didn't look like a like a like an auto DM sort of thing or a script you didn't sound like Ai and you were just like hey my name's Ryan um I noticed you work on this team and you have some openings like can you tell me what it's like on your team like what are the sort of things that you do on a day to-day basis and then also you know I'm a I'm a university student I'm about to graduate in 3 months like how can I position myself optimally in order to get this job I I ran a poll on my Discord and 90% of people said that if somebody did that and they were genuine about it that they would interact with him and that they would actually extend a referral if they asked right and so that's a that's an easy way to be an outlier in networking you know I I think about a lot you know there's this networking stuff where it's just like hey you know strengthen your your networking go up and talk to people there's this and it's American style too so it's like everybody thinks it's fake and surface level but that's not what I'm talking about right like you should do those things but like really like networking is about making some sort of connection right and so if you're able to connect with people they're in a spot to help you if you can provide value to them right I think that's the that's one way to be an outlier I think um if you're if you're new and you're you're willing to pick up skills hey what's the skill that I should pick up so that I'm much more attractive to to uh big Tech or to to getting a job I think that most people should go deep instead of going broad you know they'll be like Oh I'm going to you know I'm doing a react tutorial and I'm going to learn rusts and then there's a machine learning python thing with you know py toch and they go breath and there's no cohesion there it's like you know mobile app development and machine learning yeah you can make them sort of you know connect to each other but at some sense it's contrived and there's just so much to learn and so I I give the general guidance it's just like okay well what's the thing that interests you in a frame work or a language that you are you like you already know like how deep can you go in a particular you know in a thing that you already have some familiarity with 2025 is there a top programming language that you'd recommend for someone to go deep in the cheeky answer is English is the top programming language in 2025 um what what do you mean by that you know we had talked about it a little bit before but the ability to communicate yourself the ability to package your experience and tell a good story I think that's the thing that's going that's the high leverage activity um in terms of languages you know dude I've been I've been programming you know I I've done assembly in basic and Pascal and c and C+ like I learned c c in 1990 right like languages are they come and they go like I I'm I consider myself a pearl expert like that that's no longer useful right and so like the language itself I think in a sense is immaterial I think this is where I think you know your your personal curiosity like it's totally fine to pick up something that um you know you have an affinity towards I think it's also totally fine to be like hey look at all of these jobs in Java I don't think Java is going away or at least jvm based languages and so I think it's totally okay to be like well I'm going to become an expert in Java that's not very sexy right now but that's a totally fine reason so however you get there my advice is just just go deep right people will be like okay cool well I'm going to do a Java tutorial and then I think an example of going deep is just being like Oh what's going on in this virtual machine what are virtual machines right um what does it what does it mean to tune a garbage collector and we can get into a debate about whether you're going to shoot yourself in the foot with you know trying to tweak your jav a garbage collection but if you are willing to pop the hood on that and then sort of like take a look at what's going on in there that's a sort of thing that nobody can stop you right like you can just you can just try to go deep Steve said to go deep so I'm going as deep as I can till you get to the ones and the zeros that are flowing through on that bus right like that is the thing that is rare last thing on this topic of um you know breaking in recently Zuck he had this uh quote he said on an interview that you know the capabilities of AI in this year will be able to produce mid-level engineer code um already do you think that Junior Engineers are are screwed then because of that I think it's super interesting maybe you should tell me you're the one that works at meta right but I'll I'll say this Folks at the CEO level you know they can they're very high performing their job is to look into the future but they tend to make predictions that are they're not exaggerated but they tend to they tend to make things like the timeline for which things happen they tend to undershoot that and then um they tend to overshoot in ability but the idea is that the vision exists and you work towards it the fact that he says he equivocates or at least he's hedging he he's saying mid-level Engineers later this year if that was actually already there he would have said senior staff level Engineers or 10x Engineers by tomorrow right the fact that he's pushing that out makes me think that the actual Implement like the rollout of a mid-level AI bot within meta is a little it's a little further away because his job is to move the goalposts just a little further than where we're at and so I so I have a little bit of Doubt there now if you want to talk about you know AI taking over some tasks yes absolutely they should you know I think when I was coming up as a mid and Senior oh code generation look at these annotations we can put lombok in our code you don't have to write Getters and Setters um there were there was you know I have a lot of familiarity with Java Java is a very verbose language Oh look The IDE can help me refactor some code the IDE can write some boiler plate for me yes absolutely we should be leveraging tools to make us more efficient but at this point I think of uh AI help as an amplifier if you just go through the different levels if you're a non- coder I think that you can go from zero to one very easily right so we're getting to the point with products like repet where a Soup To Nuts from beginning to end um but I have my doubts that if the app doesn't work uh exactly the way that it's intended um or they're like hey scale this thing to meta scale like I I don't think an AI is going to be able to do that so I think very comfortably we'll be able to go from zero to one but I don't think that it will go from like one to many I think a 1x engineer is going to definitely turn into a 10x engineer today with the help of a I but do I see a zero to 10x engineer jump like later this year I I don't see it okay so then I guess moving into you being at Amazon you went you went into Amazon you converted to an SD and then you climbed all the way to principal uh at Amazon which I know that last jump is also very notoriously difficult so you went from sd1 to sd2 sd3 and then principal um could you walk me through the the high level maybe just tell me you know what was the main thing that made the difference at each level and you know just like a very concise uh high level yeah yeah I was able to get you know to from support engineer sd1 2 and three around three three and a half years something like that you know at sd1 I think it's the real focus is on some amount of Independence so just understanding where you fit fit inside of the software development life cycle getting to the point where you can take tasks and see them all the way through so you've gained a little bit of trust there and you don't have to be handheld um I think that's the critical piece for um for junior level or sd1 um I think I just want to add a caveat there which is that doesn't mean you know everything and that doesn't mean that you don't ask questions it's just that you're much more comfortable asking a question if you're stuck you're much more comfortable surfacing an issue there's some folks that have this idea that at sd1 or or at any level that you are completely self-contained so self-contained is not the same thing as uh being independent well one of the common words that he for that first promo is like doing things independently without guidance some people interpret that as I'm not going to ask for help and I got to do it all myself which is obviously not right but you need to know how to unblock yourself so makes sense and it's also Insidious in the sense that it's it's not just not right so that it will hold you back for longer but it actually turns into a performance issue if you're hiding the fact that you're you know not able to perform or you don't know anything if you're hiding progress because you're unsure about yourself and you sort of beat yourself up that you should know this thing and you know suppose you have a task and it should take two weeks and then you're like hey everything everything's on track everything's on track and then the Thursday before you're like I've been blocked this whole time that's a performance issue right and so um you know there's a there's a difference between oh it's just going to take you longer to get there to something that's actually detrial to get to the next level um I think for sd2 the the word that pops into my head the most is ownership and so you know you are an active participant in s development life cycle you're much more of a steward of say your team's codebase and I I just sort of think about it like you know hey you're littering don't Litter here like and then maybe picking up some of the trash um that trash being Tech Deb not actual trash in the code you know being able to get you know you're now you're able to leverage this Independence and to start to make a contribution to the team's code base that's a little bit larger right so basically every step up with sde is kind of an argument that you deserve more scope and so the the scope of an sd2 or mid-level engineer is you know at the team level right you understand your team's code base you know you understand its weaknesses its strengths you can start to you know make suggestions about where it's going to be at Amazon we have an operational culture and so you know you you're on call you know how things break you might have some ideas about how to fix some of these things and so I you know it's it's a very you know meat and potato sort of role and you know this this is what you need to go from two to three yeah I'm just talking about two oh this is table Stakes for yeah I think it's expectations for at least this is my conception of it right M and there's an eternal debate at Amazon about whether the sd2 or mid-level role is a terminal position or not can you retire as an sd2 the level granularity at Amazon is such that I think S2 is a very wide band so I think at the upper levels of S2 a lot of those folks are senior engineers at other companies um even within big Tech not just you know oh they a senior engineer um at a a smaller company or a startup I think they're you're you're pretty strong um as an sd2 at Amazon just because the granularity for levels at Amazon is so terrible and um so I I tend to to bias towards like yeah actually at sd2 you're uh that could be a terminal level right now I don't advise that people think of it as a terminal level but it's just a reflection of you know how much scope I think an sd2 at Amazon can can actually deliver against so there isn't an up and out policy like if you were a manager at Amazon and you had someone that says Hey I want to just stay at at you know sd2 um is that okay or would they get fired in Amazon's culture eventually so and it might have changed you know it's been it's been close to a year since I've been gone so I say we a lot as though I still work there I'm still trying to train myself I don't work at Amazon yeah um so uh it's definitely up and out at sd1 yeah and so if you've been at sd1 for more than 2 years you know it's it's kind of like H this is is there formal formal like you know 24 months and then they start managing out or it's a feel thing I believe it's a it's a strong it's a progressively stronger Guidance the longer that you've been there but it's not a 20 36 months and then you're out sort of thing yeah yeah um I think for sd2 it's a much more interesting conversation I think that will depend on the where the upper management you know for that particular individual where they land on whether S2 is a terminal level or not MH um and so if you happen to get a manager that's basically like no you've been there for 10 years you should be a three um if you happen to to get that person um then I I think it might be might be bad news for you and you know with the recent news about meta a lot of people are likening or they're worried that meta would turn into Amazon because Amazon's famous for a culture of intense performance and cutting people who aren't making it um from yeah from your time at Amazon I'm kind of curious maybe you can give us the the the juicy details like how many people are expected to be cut in Amazon typically like cuz you were there for so many years is it you know some percentage per year or is it a to the manager's discretion how does that work what I can say so I won't give an exact number uh what I can say is that guidance you know suppose it was five or 6% you know for an organization that number used to be a recommendation it would it would be kind of a soft one hey we need to manage out x% of folks over the course of a year um I think in the past couple of years that has turned into a much more um it's turned from guidance to much more of a mandate I think coupled with the fact that up until recently they weren't doing backfills for folks there was this sort of like hey keep on running cuz this thing's chasing you right from the back yeah I don't think that was necessarily healthy yeah and you know if I were to be quite honest I I consider myself a high performer and so if you're a high performer you don't have to think about that stuff and you know as much as I'd like to be empathetic about about it and you know I've been around some of these decisions and meetings and stuff like that um if you're down it's I it's hard for me to to speak about what it's actually like to to to feel like your job may be at stake right and so you know I I think a lot of what I would tell you is is just kind of cold and numbers based there are real people here right if you you know getting fired from a job is you know that's a that's a very that's a highly emotional psychological thing right so I just want to make sure that I I I bring that up maybe I'll say this and this is this is sort of how I I guided other folks and other managers when they're asking me hey how do I how do I think about this the way to think about it is 5% suppose that was the number right so that's one in 20 people right and so just just take a population of 20 people and I think there's a distribution there and the people on the left hand side of that distribution in regular years where there are backfills I think that I think that they're not they're not having a good time with Amazon's culture right they're not thriving almost by definition right we're just going to say hey everything on the left-and side is um people aren't aren't having a great time and so I think it's almost a relief that there's a way to sort of like leave a situation like that what's what's the alternative they stay and somebody that's not having a great time in Amazon's culture which you know it's it's it doesn't have a great reputation part of me is like oh that's kind of nice that you know um it's kind of a blessing in disguise right that we would move them out now without backfills that's where I start to get a little uncomfortable because in BAS basically any other year that they would be at Amazon they would be totally fine and I think even people you know that are sort of left shifted but in that main part of the distribution I think they're great um so that's where I start to go like this is not this is not something that um I really agree with you're saying because it starts to cannibalize people who are they're doing good but now we're forced to yeah stack ring people that were good so suppose you had a 6% amount of folks that were let go and that was a hard thing and so you did all of the very tough work to identify those folks and have them move out and now you need to do 6% of those folks that remain and then you need to do 6% of those folks that remain and so I it's not 18% you know I don't I can't do that math but now we're starting to talk talk about people that are very close to the mid point they're operating at a high level and in any other year they'd be totally fine um but now they're not and so you know I I I have colleagues that were let go recently and he just kind of blows my mind that they would be they would be let go and so I think the most amount of impact will come from folks that um say middle management where okay okay well there's four middle managers within the subor right here the bottom 6% like 6% doesn't even make sense when you're talking about four people or eight people right and so I I was very surprised by some of the people that were let go recently so you said when in the past I guess as a principal engineer once you get higher up you were privy to some of the conversations where people are being discussed if they're getting managed out what what happens in those conversations how does a high level IC like you participate yeah you start getting pulled in when you're a senior engineer and you definitely get pulled in when you're L7 or above those meetings are terrible right um they're like three days long and you're locked up in a room and you're just sitting there talking about people and people you start to lose the humanity you just start to think of them in terms of you know the measurables right and and the feedback from other folks um I won't go into the specific process um but what I will say is it's not a linear algorithm um I think in a in a perfect world you would just go through everybody in the org and then you would you would have equal amount of time to talk about them and their strengths and their weaknesses typically you just talk about the edges um and that's not a reflection of you know the people that are making the decisions and whether that's poor or not it's just it's the math there are just too many people and so the the conversation tends to go to either side and um yeah it's it's just it's not my favorite time of year yeah no definitely it sounds intense especially if they cut out some low performers and then the next iteration is like people where you objectively look at them go oh they're yeah they're solid but you need to Fork over some more people now if you want to talk about meta I think meta is on a hiring spree if I'm if I'm not mistaken think you know if uh if your fearless leader is saying Hey low performers are leaving and it's say at a 5% number I think that's the number that's been floated around um I I just have a sense that those folks are probably not having a good time at meta right now right um do that everybody no but I would say the the vast majority of folks there um if you're talking about one in 20 people 20 random people at meta there there's probably somebody that's struggling especially when you start multiplying that out across a large population so because the inflow is much larger than the outflow I wouldn't be too worried sounds like across big Tech there's this increased intensity and uh historically Amazon has been the one that's always had this level of increased intensity or at least this this process of like let's manage out the low performers quickly and let's let's just factor that into our processes given that you've been in a lot of those performance conversations do you have any advice for the people who are on the border where you know if this is a how we're going to be operating in the future people who are kind of just meeting expectations what is the things that protects you uh in those conversations um that they could do for this coming year to to be safe I think it's just that if you meet expectations if you solidly meet expectations if everybody across the organization met expectations I don't think you have a 5% stack ranking like removing folks from the system right and so you know I I don't think that people that are and I bristle a bit at the low performer label I just I just again I think of it as like the culture is not working out there is a mismatch between me and the ambient environment at any particular company I don't think it's a low perform you know how hard it is to get a an offer at meta like you are not a um low performer yeah right you you have to be driven there is a song and dance that you need to that you need to perform under pressure in front of somebody like you go and take a Le code hard and you have to go look at some you know you have to coat it in front of some SD that's like got a bad expression on their face like you are more than qualified your smart as hell and now you're working at a company and maybe you thought it was something different than what it actually was what I would say is I don't think these low performers these so-called low performers they should try to become High performers right I think by focusing on trying to be a high performer or focusing on trying to get to the next level there's usually a reason why you're considered you're labeled that way and so try to figure out what is that Dimension that you're being judged and measured against that's that's holding you back from meeting expectations so I think you need to crawl before you walk before you run what is that thing that they're judging you on and then I think you should be real with your manager and you should say hey I just wanted to check in am I meeting expectations and if I'm not then like let's let's do a preemptive plan right so pip stands for performance Improvement plan can you do a pre tip can you can you proactively put together a plan to get you to a spot where you're going to be safe that's what I would that's what I would recommend just be proactive about growth to get back to the median asking your manager for a proactive pip is I would maybe not use those words that's hilarious um okay so it sounds like I mean obviously meet expectations work with your manager well I don't think it's obvious I don't I actually if you if you took a Sur of software developers and you asked them have you used these words with your manager suppose you're my manager yeah hey Ryan um you know I just started here at meta um I just wanted to get a sense of what my your expectations of me what are those right have they have you explicitly asked about expectations with your manager I think like 25% of of people have actually done that I think most people are trying to guess at what those expectations are and so I think that would be my first bit of advice is just like straight up ask what expectations are and then ask if you're meeting them or not right that would go so far definitely yeah that makes a lot of sense I think most people all right I don't know if it's um being shy or or what but feel like most ic's don't directly talk to their manager and say I want this or you know how do I meet expectations how do I get promoted kind of just do the work and do it well and hope that things go go well well obviously there's going to be an answer yeah and so it's like hey Ryan Ryan what's your expectation of me and am I meeting it it's like no Steve you are not meeting expectations and um it's starting to become a problem even that is a better situation than not knowing oh yeah for sure right and so um there's a mutual friend of ours Rahul Pandy from Tero yeah yeah I stole this saying from him and I don't know if he stole it from somebody else that worked at meta but it's basically like um bad news that's delivered early is just news right right bad news that's delivered late is terrible news yeah so the the you know so if you are asking about expectations and it's early in your career it's early in cycle you know and they're like hey this is a problem well now you've surfaced the issue and you have a like you have a Fighting Chance of actually addressing it if you are like hey what's up with my expectations oh it's really bad and it's December right so the month's preceding performance review you're not in a good spot yeah right and so I I just encourage people to deliver or try to find as much bad news as early as possible for your principal promo I think a lot of it comes down to having the opportunity and then delivering but I it's it's interesting to dig into how you got the opportunity to even deliver on principal scope so kind of curious can you tell the story about how you got that so I was reorg back into Prime video and so the previous team to that was a team that I cared deeply about it was called Amazon tickets we sold tickets like Ticket Master Built a bunch of really awesome Tech um a ton of patents um I love music I love going to live shows and so I was like oh this is great they spun that business down and they reorg that whole team into Prime videoo and um basically the 30 or 40 devs that were in that organization they kind of just scattered into the wind right and um I was I had a bad taste in my MTH and so I was and I didn't want to talk to any of their team so I was basically like okay well what do I have here what what they had was a a team that was focused on delivering live sports on the Prime video platform and uh I'm a big sports fan as well and so I was like okay well this is interesting and then I looked around I was like oh there's a bunch of principal Engineers here okay so cool I can I can learn about what's going on there and um there is this really big need that was there um just the the catalog work and you know I I just made a decision about whether I wanted to pick it up or not right um and I decided to it was just in reality much larger than any other project that I had ever done I wouldn't say it would it landed on my lap I it was a combination of staying and then sort of saying okay well if I stay I need to do this I see so it's some scope that principal Engineers were aware of needed to be done was particularly difficult it was it was just sitting there for someone to take it on yeah you took the initiative say all right I'm going to take it and stay on this team and then you delivered on it yeah it's you know the way that the principles were organized back then it's changed now but essentially the principles were assigned to different areas say like playback or clients or catalog or wherever they were and the work that needs to be done was in the gaps between those or so it had to be an end to-end solution and so even though the the the thrust the main thrust of the work was in these sort of centralized services and so that's why you know nobody none of the other principles had done it because they were kind of they were doing all of this other stuff that was necessary for us to deliver okay so that that makes a lot sense too cuz I imagine also if you delivered on that so each principal to each um I guess Central vertical and you're delivering some glue work um if you did that job really well not only is the scope huge but also these principal Engineers are you know they're going to have context on your work and speak to your packet and be champions for you so I'm sure that was helpful too A lot of people they say getting to principle Amazon is so difficult people don't even recommend doing it you know there's all this job hop advice so what is the thing that usually blocks people from going from senior to principal at Amazon there's a lot of reasons um I think just to back up a little bit I am of the impression that Amazon just skipped a level so they should just insert a staff level uh staff level they could do that right now basically they would say okay well everybody that's principal will'll call you principls shove staff in there and then just say hey for you know for the really high performing S3s we're just going to move you there preemptively and that would be so great but I think the big problem is that you're essentially jumping two levels uh for that particular promotion and so the the big thing that's holding them back is that you need to jump two levels right so there's there's basically double the amount of criteria to get to that next level and I think it's kind of impossible to um exhibit all of the moving to criteria for principal in a year so if you think you're ready hey I'm a senior engineer I've been doing really well I'm going to make a big push I think it's like it's it's because the job is so different because now you're influencing multiple teams it's very difficult to find the opportunity and then also be able to perform at a level where people would consider you the next level 12 18 months and so what ends up happening for you know the the failure mode that I see the most is they think they're ready they will make a push they will get a rejection and they will get some amount of feedback and then what they'll do is they'll you know they'll just go back to their strengths and then they'll continue to work on their they might like address one or two of these pieces of feedback but it just takes so long to um to close one of these cycles and so a lot of people give up I I know so many folks that you know went to meta and they're they're thri or they went to Google absolutely thriving right now senior staff E8 you know principal at Google which is you know two levels past staff and uh in and one level above senior staff they're doing awesome they just couldn't make that jump right from sd3 to principal and so it it turns into this thing where I think there's this 2-year sliding window of where you kind of have to pack in basically a new job you have to basically be doing two jobs because there's a there's an anti- pattern where you just stop doing all the things that you need to do for sd3 and you just focus on the principal level stuff and then performance review time comes around and then they're like uh you're actually low performance at sd3 even though you're a high performer doing principal level things H how's that possible like what are those two jobs and how are they so different well the reason it's possible is because um performance and promotion are decoupled two different processes what's the performance process at Amazon performance process is you know uh yearly and then you know every six months there's a smaller version of that and then the promotion process is depends on the level so it could be quarterly or it could be every six months so they might line up generally but the idea is that there's not a dependency on one with the other and so if you're trying to make a big push for a promotion and you're doing all this principal stuff and then you know then it's so here's here's a big example senior Engineers need to code right that's a that's a very important thing that they do and um principles are also expected to code but not as large of a contribution generally like Direct contribu ution is not rare but it just that needs to be balanced with their other obligations so they might be a sponsor of a project or they might be acting as a back stop or they might be acting as a catalyst or an evangelist for a particular initiative and so you know those roles they are pan team right so it's it's cross functional teams there might be product teams there might be five Dev teams these Dev teams maybe spanning multiple organizations you might act like a TPM I was accused of that in one of my um promotion assessments uh it's kind of hard to figure out whether Steve's an SD or a TPM kind of took offense to that I'm like are are you kidding me dude and and you know one of them came back like hey you need to code more and I'm like I have checked in so many lines of code and so okay well I there's some sporadic you know six months where I didn't code a lot it's like I didn't get any credit for time served I see okay so they looked at the code delivered in those six months when you're going for principal they looked at it not a lot of code and so they said okay we're blocking you because you're not doing the senior job yeah but principal was good because you were doing all the cross functional yeah and so then it got kicked so then it's like okay well now I'll go code right and they'll be like oh it's been you know it's been a long time since he's been on call he's not on the day-to-day operations for an individual team it's like I've been you know I I was there for 18 years I have been on call longer than Pro like time on call longer than most people's careers at Amazon by far I've probably been on call like four years continuously yeah and so you get feedback like that and you're just like this like I'm battling the process now right and so to to be quite honest I was promoted in 2020 um and I thought I was ready at 2016 so you know I I was promoted to senior in 2012 so it took 8 years to get there I thought I was there in 2016 and four years and you went for promo every year and they gave you like this TPM feedback or other yeah there was there were a number of obstacles but you know they changed the process three times during that four year span um I I just to be honest I probably hadn't generated evidence that I was operating at that level that's not to say that I didn't have the ability but you need to generate this tangible evidence that goes into your packet so I wasn't quite there yet you need the support of your manager and so there was a there was a number of reasons why I wasn't able to get there um but a lot of it was just battling the process itself I don't think I necessarily up leveled myself I think I just became an expert in the process of getting promoted and so what did you learn from becoming an expert of that promo process for senior 2 yeah I you know I I think about it and like is that a useful skill yeah I think so I think it's useful for people that are in Amazon I learned a couple of things so the big ones are don't wait to start I think a lot of people postpone themselves and so they're like oh well after this big project lands that's when I'll get my packet together but the project Landing may not be the thing that that you would be rejected for and so I'm a big proponent of being kind of impatient and putting your packet in early and then getting that actual feedback about where the gaps are so that's one failure pattern I think the other is you know you do get some amount of credit for strengths in your promo packet and so suppose your strengths are you know he's a great communicator um very data driven he does a lot of you know he's a Str there's a strength with interviewing um great coder cool uh feedback oh well he's not scaling through others uh he could be a better Mentor um he doesn't communicate upward very well to directors or VPS um so let's work on that you don't really have to put so much emphasis on the strengths just make sure that they don't regress and turn into problems but I think you can just focus on the delta because that's what the promo panel is going to do when you're you know we try to make the the promo packet sticky to a particular set of individuals and so it's like okay well Ryan you know rejected you get the big red Stamper thing on a piece of paper and you know six months later it's like oh Ryan he's not promoted yet okay like let's dig in again with humans just like the talent review process you're you're going to look at the Delta you're going to look at the outliers right and so you're going to be like okay well what changed right and just like let's look at the like the evidence that's there and so if you're able to really focus in on the the areas for growth the places where there aren't as many data points then uh I think you'll be pretty successful when you get that packet back you're saying there's the strengths and then there's things that blocked it and you're saying strengths they're good don't you don't need to worry about those just focus on on the weaknesses and closing those gaps I would just say prioritize the weaknesses and gaps and you just I think about it like uh you're in a kitchen with a lot of pots and pans everywhere it's like your strengths you can put that on the back burner mhh right but um you know this uh this risoto like you're going to sit here and make sure that the risoto is good right it's like it's like you're adding broth you you just can't you have to make sure that you got that right and so you said you were at Amazon for 18 years their Amazon's culture is very specific they have the leadership principles it's its own yeah culture what's your favorite parts of Amazon culture and then we'll also talk about the worst Parts too the worst Parts is it you know I think there's some amount of Stockholm syndrome for me being there for so long I'm drinking the Kool-Aid you know I still say I we even though it's been a while since I work what's your favorite Kool-Aid then well I just the big thing is uh customer obsession oh yeah I I think especially when Bezos was there um nobody ever gave uh lip service to the customer experience that was the highest priority from interns to VPS you were always going to be doing the right thing if you had the customer in mind absolutely 100% um and I just I think that's a great North Star and so you know I think if you chase profits or you focus on competitors or you know there's a lot of other trappings that are there you might optimize for the wrong thing right if you optimize for shortterm next quarter profits it's going to bite you in the long run um if you optimize for you know if you're just sort of chasing that's another problem right and so if you if you actually work backward from the customer you know Jeff Bezos has that saying they're like hey long-term profits and and customers those are the same thing there's no difference there I think that's wonderful another thing that I absolutely I think is a superpower for Amazon is their writing culture you know I think um the ability to write a six-page doc that was that was accelerated by the fact that I have a writing degree and so I didn't realize that I had the precursor to a superpower um when I joined I I was worried about like learning Java right or or learning how to to deploy to man I wish people would have a college class to figure out how to like send an email or to be clear about like the work that's in front of them and so what comes with a a wonderful writing culture is a wonderful reading culture like we literally will spend the first 30 minutes of a meeting reading the document and then we will have a discussion afterwards there's no this never works it's like oh I sent you the document so after you've read the document we're all going to get in the no nobody does that right like they should it's like a best intention sort of thing right but the fact that you're forced to read it at the same time and everybody's just sort of fast forwarded to the same place and then you can have a discussion like that's actually super powerful so if someone was on boarding to Amazon they really want to make sure they hit the ground running and plug into the culture would you say that's one of the most important things yeah if if they if they are curious about how we know we're doing right by the customer yeah I think that's a you if you have a curiosity about that you will do you will do really well um the writing culture I think that's just the medium by which we express our ideas that's learnable um that's something that I wouldn't necessarily focus on before you joined you said you're drinking the Kool-Aid but there's got to be something that you don't like about Amazon culture what would be the number one thing uh I know mine what's that I remember this was uh this was like a joke among my friends and I Amazon I there's the leadership principles right and you know there a list of what 11 or 12 things that yeah everyone's kind of basing everything off of and there's one there that was just like the recurring inside joke among our friend group which was frugality basically anything anytime something was crappy or cheap or whatever we would just say oh frugality so you know no free food no uh there was some other things too like a hardware wasn't particularly good or yeah you know I think free food that's a perk if if a company doesn't provide you food like that doesn't mean it's a bad company so it's it's it's great on the upside but I don't think there's it says very much on the other side I do think think you know frugality uh we we have a term called being Frid where you are right so Frugal that it's kind of stupid I had to beg borrow and plead for Hardware right like I'm I'm trying to get a trying to get a MacBook Pro with like some Ram so that it doesn't like like the fan doesn't overheat when I'm running like building my code it's like if you're going to hire you know tens of thousands of software developers you won't like get them a computer that work now I'm not saying like I need the top-of-the-line thing I just I just need a computer I'm a software developer give me a you know give me a computer that works you know when intern season would come and then the interns would leave and then the vultures would come to try to steal the monitors right and so it's just like you know it just it just reminds me of like Oliver Twist like you know it's like more please it's like you just want a little bit more GRL yeah one thing that I wanted to dig into uh and I guess this is switching to another topic is in your time at Amazon you had 17 managers over 18 years so you've seen a lot when it comes to managers what was it that made your best manager the best manager out of 17 I think I had more than 17 managers actually really yeah okay than it was in the 20s last time I checked I took a screenshot of my phone tool you know I think a lot about this you know uh sometimes people would complain about a micromanager but there's a class of of folks that kind of like a micromanager like they they kind of need to be led they kind of need things broken down for them I do think that a lot of what makes a good manager is personal the ones that I resonated with um they tended to be principles based right so not just the leadership principle stuff but like the way that they operated um they sort of reasoned through you think of these principles as axioms and um you know so you fix certain things and and those things have implications and so the best managers I think they fixed customer Obsession they fixed uh things that I value like sort of thinking ahead in the future so they were maybe willing to entertain some you know some stuff that in the short term like a hack but it was always within the context of like what should we do what's the right thing to do in the future okay so like let's made a tradeoff for that instead of you know maybe some managers that I didn't like are folks that are maybe too delivery oriented right so it's just a constant Death March it's about delivery it's about near-term delivery um so folks that kind of thought a little bit ahead in the future and um were maybe not so constrained by what we had in front of us I see and then what about the worst manager you had out of 20 something managers yeah I don't want to name names or anything but um you know sometimes I think about how did we get here right and so like we live in a in a moment right now and so I'm talking to you and so I I I can see it you know a year ago he was here and a year before that he was here and I I can kind of see the progression of how you get from you know maybe a university student at UCLA to where you are right now like that aggression makes sense I think some people that I worked with you're like how did you get here like it's it's sort of like the Silicon Valley thing I forget the name of the guy that uh bigh head yeah yeah it had to have been some sort of big head scenario where you know he fell up right luck happened and everything just sort of landed in their lap so you know um I think the worst managers I had would be combination of like not my style right so again you know micromanager one person is a really caring and engaged manager to another person and then um just a little bit of like WTF like how did you get here I thought that the whole performance and promotion process and the hiring process was supposed to filter a certain set of folks out and here we are at the end of each interview I like to go over just general reflections of people um kind of looking over the career what are the things that you learned and and various other things um one thing that I'm curious about because you were at Amazon for 18 years and in this industry that is extraordinary people already call me fossil for being at meta for greater than four or five years so you know what kept you at Amazon so long I think that you know we had talked about the number of managers that I had reported to um I had many careers many many careers at Amazon right so I worked on the first Kindle and I worked on the precursor to Prime video before I went back to Prime video I and I worked on in payments so you know I think the fact that Amazon does so many different things um has allowed me to work on a variety of different things you know and didn't feel like I've been on one team it's not like I worked in the accounting department for 25 years and they handed me a gold watch right um and so you know there's a there's a VP I think he's still a VP at in advertising Paul cotus he he told me one day he said I've never switched teams wow right like Amazon just kind of you know refactored itself around him until he was BP of ads right and so great guy and so um you know I don't think it's gets to that extreme but um you know I had a wide variety of experiences there and so it does it doesn't feel like one 18-year contiguous sort of experience so it sounds like you were still challenged learning I think when I was at Amazon for my short stunt it was difficult for me to not have wandering eyes because there were these other hot companies recruiters were messaging me and you know I was just seeing that oh maybe I can get more somewhere else um did did you ever consider leaving Amazon yeah yeah absolutely I think um you know especially early career it makes a lot of sense to jump companies uh you know everybody hears the the common advice it's like hey you want to maximize your total comp you should be job hopping I think that works until you get to the equivalent of senior after that I think you know you're an outlier here but I think after that it makes sense to put Roots down right the the levels that at the highest levels I I don't think you're going to find a lot of distinguished Engineers or principal Engineers or staff senior staff Engineers that haven't been on the team like the like the jump the thing that got them to that level I think you what you'll find is that you know there there was like five years you know at least like at least three but more like five or so where they really stayed on the same team on the same problem right right and so you know I think if you want to min max it what I would say is you know job hop every two years till you get to to Mid maybe a little bit before and then go to um you know and then try to put Roots down if you want to become a highle tech IC for me I think that because I was able to to go to different teams and you know because I don't have that computer science background I think staying put made a ton of sense because I feel like I didn't there was so much to learn right you know there was so many there was so much code that you had access to there were all of these wikis you know these internal videos and so I felt like I could still grow in the ways that I wanted to by staying at Amazon I remember even when I was at Amazon the stock was climbing like crazy did you have any years where you were just super overcome ated and if so how much were you making in that year so here's the thing I I would uh you know I I was basically divesting and then you know putting money into other Investments and I won't say that I missed a lot of like the Amazon's climb because a lot of it was was sort of unvested right um I don't know I think uh 2020 or something like that I probably got like an extra 350k that I didn't deserve you know just from from the market returns and and extra rsus that were given to me um when I left so 2024 I you know if on the on the vesting schedule that I was on I would have made 750k which is not a lot compared to like the upper end of the salary ranges but quite a bit just sort of objectively as a number to make in the US at this point in time I decided around I think 2018 or 2019 to to maybe like not divest my Amazon shares cuz it was always like you're dumb like you shouldn't put all of your eggs in one basket but every time I sold stock just if you just look at the stock price it was just it was just the wrong move right and so I was like I'm done I'm done I'm not going to keep every single little bit but um I'm going to keep some and so that turned out to be okay you said extra Equity did does Amazon have a uh for high performers uh like a discretionary Equity or additional Equity um not that I know of I think um I compensation is largely you're talking about like Refreshers then yeah yeah it's at the discretion of managers and so you know one of my one of my best managers he was basically like YOLO YOLO he was like I'm out and so so he hooked me up you know and and left me go but it's not like these insane like million-dollar things that I ever got how how big of a difference to that it was that 350 Delta oh I see I see just like that was over four years or no it was it was just sort of all at once it just here's 350 okay that's pretty good yeah yeah it was it was the equivalent of that he was he was basically on his way out and he he gave it to me and then he left and then that appreciated essentially the next year like immediately so oh that's amazing it wasn't it wasn't like here's he didn't write me a check it was just a combination of the um of sort of getting an outsized um performance bonus and and the stock price just doing really well okay so over the course of your career 18 years at Amazon one thing that I'm curious is what was your biggest regret um yeah certain teams I think just just reading the the the writing on the wall and making a sober decision about whether to stay or whether to leave I think there was a lot of inertia I think your default mode is to just stay put for some amount of time and I don't know if that's useful the uh I guess the career regret is noticing when you're in a bad situation or a bad team and just taking the initiative to change that situation just leave the regret is just did you make it a decision or not did you take in all of the considerations and then said said okay I am going to continue to stay it's the deferral of a decision and so the default becomes just staying put that's the regret it's just like just turn it into an explicit decision and the last question I like to ask and I ask everyone this question is if you could go back to you or you just graduated college you're right about to enter the industry you could tell yourself something what would be the thing that you want to tell yourself um I think I think maybe saying something around people pleasing right um you know in the the culture that I was raised in and you know there are these tracks that you get on and it's like okay we'll do well in school and then go get a job and then go get married and like you know you have this feeling of being ahead or behind right so that relative comparison um but then also after you do a thing after you make some sort of achievement you're kind of looking for to someone else for validation and um I don't know if my younger self would have like listened to be quite honest with you but you know just if I could somehow learn this lesson that like the person that you really need to please is yourself like just just being like are is are you doing what you want to do or are you doing it because that's the expectation of somebody else are you climbing the ladder because you want to get to the top or are you climbing a ladder because the ladder was put in front of you just examining that um that makes sense cool well thanks so much for your time Steve I really enjoyed the conversation and uh yeah I guess now would be the time if we if you want to shout out anything that you're working on um I have my uh YouTube channel it's called a life engineered um so go and subscribe to that I have a Weekly Newsletter um that gets sent out so you know it takes a long time to make a YouTube video and so you know if you want more from me the newsletters there and then if you want to chat um just join my Discord awesome cool all right well thanks so much for your time Steve really appreciate it absolutely