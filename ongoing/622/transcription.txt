software has two values there's the value of what it does and there is the value of its structure programmers often ignore the second value we focus on what the software has to do and we believe that our job is to satisfy that need there's a set of requirements out there and we must meet those requirements and if we meet those requirements we have done our job but if we do that we've only satisfied the first value of software there is a second value of software and it is arguably the more valuable of the two the second value of software is the structure of that software and why is that a value it's a value because of what software is yesterday I told you that software is a compound word that it means flexible product software the very nature of software is that it must be changed it must be changeable if it is not changeable the software has no value if you give me a system that works perfectly now but I cannot change it that software will be worthless tomorrow because the requirements will change and if I can't change the software that software will become worthless instantly so that I must be able to change it I must be able to modify it and the cost of modifying it it must be low so that I can continue to make that software do what it needs to do to satisfy the customer's demands if you give me software that does not work but it's changeable I can make it work it is more important that the second value be maximized than the first because if the second value is maximized if the software is flexible I can make it work but if you maximize the first value at the expense of the second if you maximize the fact that it works today at the expense of being able to change it then when the requirements change the costs will inhibit that change and if they inhibit the change too much the software project will fail these two values are necessary for every software developer to keep in their mind at all times it is not enough to make the software work the software also has to be right and the word right is an unfortunate word because it's a binary word I don't need the binary connotation the software has to be well structured but it doesn't have to be perfectly right it has to be good software it has to be well fought through the structure has to be changeable the value of its structure has to be high [Music]